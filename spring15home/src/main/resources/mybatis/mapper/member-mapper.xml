<?xml version="1.0" encoding="UTF-8" ?>

<!-- 
	myBatis 매퍼 파일
	- DBMS에서 실행할 SQL 구문을 저장하는 XML 파일
	- namespace를 통해서 여러 개의 매퍼를 구분한다
	- 테이블 당 1개씩 만드는 것이 일반적이며, 따라서 namespace를 테이블명으로 작성하면 구분이 용이하다.
	- <insert> , <select> , <update> , <delete>를 이용해서 CRUD 구문을 작성한다.
	- 각 구문은 외부에서 호출이 가능하도록 반드시 ID를 겹치지 않게 부여해야 한다.
	- parameterType 은 구문을 실행하기 위해 필요한 데이터의 형태를 말한다.
	- resultType은 구문을 실행한 결과를 어떤 형태로 변환해야 하는지를 말한다.
 -->

<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
	
	<!-- 회원가입 -->
	<insert id="join" parameterType="MemberDto">
		insert into member 
		values(
		#{memberId},#{memberPw},#{memberNick},
		#{memberBirth},#{memberEmail},#{memberPhone},
		sysdate,0,'준회원'
		)
	</insert>

	<!-- 단일조회 -->
	<select id="get" parameterType="String" resultType="MemberDto">
		select * from member where member_id = #{memberId}
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="changePassword" parameterType="map">
		update member set member_pw = #{changePw}
		where member_id = #{memberId}
	</update>
	
	<!-- 
		개인정보 변경 
		1 : 자기자신
		2 : 관리자
		3 : 통합
	-->
	<update id="edit1" parameterType="MemberDto">
		update member set 
		member_nick = #{memberNick}, 
		member_birth = to_date(#{memberBirth}, 'YYYY-MM-DD'),
		member_email = #{memberEmail},
		member_phone = #{memberPhone}
		where member_id = #{memberId}
	</update>
	
	<update id="edit2" parameterType="MemberDto">
		update member set 
		member_nick = #{memberNick}, 
		member_birth = to_date(#{memberBirth}, 'YYYY-MM-DD'),
		member_email = #{memberEmail},
		member_phone = #{memberPhone},
		member_point = #{memberPoint},
		member_grade = #{memberGrade}
		where 
		member_id = #{memberId}
	</update>
	
	<update id="edit3" parameterType="MemberDto">
		update member
	
		<!-- set을 이용하여 수정항목을 동적으로 배치(단 마지막 콤마는 반드시 작성) -->
		<set>
			<if test="memberNick != null">
				member_nick = #{memberNick},
			</if>
			<if test="memberBirth != null">
				member_birth = #{memberBirth},
			</if>
			<if test="memberEmail != null">
				member_email = #{memberEmail},
			</if>
			<if test="memberPhone != null">
				member_phone = #{memberPhone},
			</if>
			<if test="memberPoint != null">
				member_point = #{memberPoint},
			</if>
			<if test="memberGrade != null">
				member_grade = #{memberGrade},
			</if>
		</set>
		where member_id = #{memberId}
	</update>
	
	<!-- 회원 탈퇴 -->
	<delete id="quit" parameterType="String">
		delete member where member_id = #{memberId}
	</delete>
	
</mapper>